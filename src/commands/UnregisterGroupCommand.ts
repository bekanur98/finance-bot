import type { CommandContext } from "grammy";
import type { CommandHandler } from "../types";
import { GroupService } from "../services/GroupService";

export class UnregisterGroupCommand implements CommandHandler {
  private groupService: GroupService;

  constructor(groupService: GroupService) {
    this.groupService = groupService;
  }

  register(bot: any): void {
    bot.command("unregister", this.execute.bind(this));
  }

  async execute(ctx: CommandContext<any>): Promise<void> {
    const chatId = ctx.chat.id;
    const userId = ctx.from?.id;

    if (!userId) {
      await ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤ –≥—Ä—É–ø–ø–µ
    if (ctx.chat.type === 'private') {
      await ctx.reply(
        "‚ùå <b>–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö!</b>\n\n" +
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ –≥—Ä—É–ø–ø–µ, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏.",
        { parse_mode: "HTML" }
      );
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    try {
      const member = await ctx.api.getChatMember(chatId, userId);
      if (member.status !== 'administrator' && member.status !== 'creator') {
        await ctx.reply(
          "‚ùå <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!</b>\n\n" +
          "–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –≥—Ä—É–ø–ø—ã –º–æ–≥—É—Ç –æ—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –±–æ—Ç–∞.",
          { parse_mode: "HTML" }
        );
        return;
      }
    } catch (error) {
      console.error('Error checking admin rights:', error);
      await ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞");
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ –≥—Ä—É–ø–ø–∞
    if (!this.groupService.isGroupSubscribed(chatId)) {
      await ctx.reply(
        "‚ÑπÔ∏è <b>–ì—Ä—É–ø–ø–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞</b>\n\n" +
        "–≠—Ç–∞ –≥—Ä—É–ø–ø–∞ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\n" +
        "–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /register",
        { parse_mode: "HTML" }
      );
      return;
    }

    // –û—Ç–º–µ–Ω—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≥—Ä—É–ø–ø—ã
    const success = this.groupService.removeGroupSubscriber(chatId);

    if (success) {
      const chatTitle = ctx.chat.title || '–ì—Ä—É–ø–ø–∞';
      await ctx.reply(
        `üëã <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≥—Ä—É–ø–ø—ã –æ—Ç–º–µ–Ω–µ–Ω–∞</b>\n\n` +
        `üì± <b>–ì—Ä—É–ø–ø–∞:</b> ${chatTitle}\n` +
        `üë§ <b>–û—Ç–º–µ–Ω–∏–ª:</b> ${ctx.from?.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}\n\n` +
        `–ì—Ä—É–ø–ø–∞ –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n\n` +
        `–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /register`,
        { parse_mode: "HTML" }
      );

      console.log(`Group ${chatId} (${chatTitle}) unregistered by user ${userId}`);
    } else {
      await ctx.reply("‚ùå <b>–û—à–∏–±–∫–∞</b>\n–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≥—Ä—É–ø–ø—ã", { parse_mode: "HTML" });
    }
  }
}
