import type { CommandContext } from "grammy";
import type { CommandHandler, Subscriber } from "../types";
import { SubscriberService } from "../services/SubscriberService";

export class SubscribeCommand implements CommandHandler {
  private subscriberService: SubscriberService;

  constructor(subscriberService: SubscriberService) {
    this.subscriberService = subscriberService;
  }

  register(bot: any): void {
    bot.command("subscribe", this.execute.bind(this));
  }

  async execute(ctx: CommandContext<any>): Promise<void> {
    const userId = ctx.from?.id;

    if (!userId) {
      await ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
      return;
    }

    if (this.subscriberService.isSubscribed(userId)) {
      await ctx.reply("‚úÖ <b>–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã!</b>\n\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ 09:05", { parse_mode: "HTML" });
      return;
    }

    if (!ctx.from) {
      await ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ");
      return;
    }

    const subscriber: Subscriber = {
      id: userId,
      firstName: ctx.from.first_name,
      lastName: ctx.from.last_name,
      username: ctx.from.username,
      subscribedAt: new Date()
    };

    this.subscriberService.addSubscriber(subscriber);

    let personalGreeting: string;
    if (ctx.from.first_name) {
      personalGreeting = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${ctx.from.first_name}! üëã`;
    } else if (ctx.from.username) {
      personalGreeting = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, @${ctx.from.username}! üëã`;
    } else {
      personalGreeting = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã";
    }

    await ctx.reply(
      `${personalGreeting}\n\n` +
      "üéâ <b>–ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞!</b>\n\n" +
      "–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ 09:05\n\n" +
      "–ß—Ç–æ–±—ã –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /unsubscribe",
      { parse_mode: "HTML" }
    );

    console.log(`User ${userId} subscribed. Total subscribers: ${this.subscriberService.getSubscriberCount()}`);
  }
}
