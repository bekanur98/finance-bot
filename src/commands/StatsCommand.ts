import type { CommandContext } from "grammy";
import type { CommandHandler } from "../types";
import { SubscriberService } from "../services/SubscriberService";
import { GroupService } from "../services/GroupService";

export class StatsCommand implements CommandHandler {
  private subscriberService: SubscriberService;
  private groupService: GroupService;

  constructor(subscriberService: SubscriberService, groupService: GroupService) {
    this.subscriberService = subscriberService;
    this.groupService = groupService;
  }

  register(bot: any): void {
    bot.command("stats", this.execute.bind(this));
  }

  async execute(ctx: CommandContext<any>): Promise<void> {
    try {
      const userStats = this.subscriberService.getStats();
      const groupCount = this.groupService.getGroupSubscriberCount();

      const message = `
üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞</b>

üë• <b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏:</b>
‚îú –ê–∫—Ç–∏–≤–Ω—ã–µ: <code>${userStats.activeSubscribers}</code>
‚îú –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ: <code>${userStats.inactiveSubscribers}</code>
‚îî –í—Å–µ–≥–æ: <code>${userStats.totalSubscribers}</code>

üè¢ <b>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã:</b>
‚îî –ê–∫—Ç–∏–≤–Ω—ã–µ: <code>${groupCount}</code>

üìà <b>–û–±—â–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏:</b>
‚îî <code>${userStats.activeSubscribers + groupCount}</code> –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π

üìÖ <i>–û–±–Ω–æ–≤–ª–µ–Ω–æ: ${new Date().toLocaleString('ru-RU')}</i>
      `.trim();

      await ctx.reply(message, { parse_mode: "HTML" });
    } catch (error) {
      console.error("Stats error:", error);
      await ctx.reply("‚ùå <b>–û—à–∏–±–∫–∞</b>\n–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É", { parse_mode: "HTML" });
    }
  }
}
